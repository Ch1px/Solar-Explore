/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 solar.gltf --transform
Author: Triangle Education (https://sketchfab.com/rumeespam)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/solar-system-360-da965e9c5db544eabc3acfd3a7c134e7
Title: Solar System 360
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/src/assets/models/solar-transformed.glb')
  const { actions } = useAnimations(animations, group)
  useEffect(() => {
    
  });
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]} scale={0.02}>
          <group name="eac8aed15f45477886404f2650a65854fbx" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
            <group name="Object_2">
              <group name="RootNode">
                <group name="Earth" position={[0, 0, 21032.74]} rotation={[-Math.PI / 2, 0, Math.PI / 2]} scale={100}>
                  <group name="Clouds" position={[-0.09, 0, 0]} rotation={[-1.01, 1.04, -1.95]} scale={42.03}>
                    <mesh name="Clouds_Clouds_0" geometry={nodes.Clouds_Clouds_0.geometry} material={materials.Clouds} />
                  </group>
                  <mesh name="Earth_Earth_Diffuse_6K_0" geometry={nodes.Earth_Earth_Diffuse_6K_0.geometry} material={materials.Earth_Diffuse_6K} />
                </group>
                <group name="Jupiter" position={[-270.39, -0.03, 36642.49]} rotation={[-Math.PI / 2, 0, -1.58]} scale={-100}>
                  <mesh name="Jupiter_Jupiter_0" geometry={nodes.Jupiter_Jupiter_0.geometry} material={materials.Jupiter} />
                </group>
                <group name="Neptune" position={[1931.12, 0, 79942.3]} rotation={[-Math.PI / 2, 0, -1.55]} scale={-100}>
                  <mesh name="Neptune_Neptune_0" geometry={nodes.Neptune_Neptune_0.geometry} material={materials.Neptune} />
                </group>
                <group name="Uranus" position={[0, 0, 66184.88]} rotation={[-Math.PI / 2, 0, Math.PI / 2]} scale={100}>
                  <mesh name="Uranus_Uranus_0" geometry={nodes.Uranus_Uranus_0.geometry} material={materials.Uranus} />
                </group>
                <group name="Mars" position={[0, 0, 28133.24]} rotation={[-Math.PI / 2, 0, Math.PI / 2]} scale={100}>
                  <mesh name="Mars_Mars_0" geometry={nodes.Mars_Mars_0.geometry} material={materials.Mars} />
                </group>
                <group name="Mercury" position={[0, 0, 9769.78]} rotation={[-Math.PI / 2, 0, Math.PI / 2]} scale={100}>
                  <mesh name="Mercury_Mercury_0" geometry={nodes.Mercury_Mercury_0.geometry} material={materials.Mercury} />
                </group>
                <group name="Venus" position={[0, 0, 15262.69]} rotation={[-Math.PI / 2, 0, Math.PI / 2]} scale={100}>
                  <mesh name="Venus_Venus_0" geometry={nodes.Venus_Venus_0.geometry} material={materials.Venus} />
                </group>
                <group name="Saturn" position={[0, 0, 51768.13]} rotation={[-Math.PI / 2, 0, Math.PI / 2]} scale={100}>
                  <group name="Plane" position={[-0.1, -0.02, 0]} rotation={[0.25, -0.09, -0.63]} scale={230.6}>
                    <mesh name="Plane_Saturn_Rings_0" geometry={nodes.Plane_Saturn_Rings_0.geometry} material={materials.Saturn_Rings} />
                  </group>
                  <mesh name="Saturn_Saturnus_0" geometry={nodes.Saturn_Saturnus_0.geometry} material={materials.Saturnus} />
                </group>
                <group name="Sun" rotation={[-2.59, 1.04, -1.95]} scale={20000}>
                  <mesh name="Sun_Sun_0" geometry={nodes.Sun_Sun_0.geometry} material={materials.material} />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/src/assets/models/solar-transformed.glb')
