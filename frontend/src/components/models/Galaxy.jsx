/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 galaxy1.gltf --transform
Author: 991519166 (https://sketchfab.com/991519166)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/galaxy-dbb2f075329747a09cc8add2ad05acad
Title: Galaxy
*/

import React, { useRef, useEffect, useState, useLayoutEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useFrame, useThree } from '@react-three/fiber'
import { gsap } from 'gsap';
import Planets from './PlanetRTF';
import styled from "styled-components";
import { Canvas } from '@react-three/fiber'
import Planet from './PlanetRTF'
import { Html, useCursor } from "@react-three/drei";
import SunLight from "./sunlight";
import { OrbitControls } from '@react-three/drei';
import Camera from './camera';
import Starfield from './StarField';
import SolarStar from './SolarStars';
import * as THREE from 'three'
import { TextureLoader } from 'three';
import { useLoader } from '@react-three/fiber'
import { Circle } from "@react-three/drei";
import SunFlare from './SunFlare';
import MilkyWay from '/src/assets/img/milkyway.png'
import ArrowR from '/src/assets/img/arrowRight.png'

export default function Galaxy(props) {

  const textureGalaxy = useLoader(TextureLoader, MilkyWay);

  textureGalaxy.magFilter = THREE.NearestFilter;
  textureGalaxy.minFilter = THREE.NearestFilter;

  const [isCanvasOpen, setIsCanvasOpen] = useState(false);
  const groupRef = useRef();

  const handleOpenPlanets = async () => {
    const group = groupRef.current;
    gsap.to(group.position, { y: "+=10", duration: 3 });
    setTimeout(() => setIsCanvasOpen(true), 3000);
  }
  const handleClosePlanets = () => {
    setIsCanvasOpen(false);
  };
  return (
    <>
      {!isCanvasOpen ? (
        <OriginalCont>
          <Left>
            <Canvas camera={{ position: [0, 10, 0] }} style={{width:'100%', height:'90%'}}>
              <OrbitControls enableZoom={false} enablePan={false} enableRotate={false} autoRotate={true} />
              <Starfield />
              <ambientLight intensity={1} />
              <directionalLight position={[0, 1, 0]} color={'orange'} intensity={1.2} />
              <directionalLight position={[0, 1, 0]} color={'purple'} intensity={1} />
              <directionalLight position={[0, 1, 0]} color={'blue'} intensity={1} />
              <group ref={groupRef} onClick={handleOpenPlanets} position={props.position} {...props} dispose={null} onPointerOver={() => { document.body.style.cursor = 'pointer'; }} onPointerOut={() => { document.body.style.cursor = 'auto'; }}>
                <mesh position={[0, 0, 0]} rotation={[-Math.PI / 2, 0, Math.PI / 2]}>
                  <Circle args={[5, 32]} scale={1.1}>
                    <meshStandardMaterial map={textureGalaxy} transparent={true} doubleSide={true} />
                  </Circle>
                </mesh>
              </group>

      </Canvas>
          </Left>
          <Right>
            <Title>Our Solar System</Title>
            <SolarTitle>Explore. Learn. Interact</SolarTitle><Disc1>Welcome to Solar Explorer! Here we have built a 3D model of our own solar system. Immerse youself in the experience.
              Here you can Explore. Learn. Interact. with all of the planets contained within our Solar System.
            </Disc1>
            <SolarTitle>Location?</SolarTitle>
            <Disc>The planetary system we call home is located in an outer spiral arm of the Milky Way galaxy, with our closet neighbour being the Andromeda Galaxy. At the center of our galaxy there is a super massive blackhole in which everything rotates around. This is what creates that spiral effect</Disc>
            <SolarTitle>Why is it Called the Solar System?</SolarTitle>
            <Disc>There are many planetary systems like ours in the universe, with planets orbiting a host star. Our planetary system is called “the solar system” because we use the word “solar” to describe things related to our star, after the Latin word for Sun, "solis."</Disc>
            <ImgDisc>Click on the Milky Way to adventure deeper.</ImgDisc>
          </Right>

        </OriginalCont>
      ) : (
        <SolarContainer>
        <Canvas frameloop="always" camera={{ position: [0, 50, 570], fov: 15 }} style={{ width: '99%', height: '100%' }}>
          <Planet />
          <SolarStar />
          <SunFlare />
          <Html position={[null]}><button id='close' onClick={handleClosePlanets}>Close</button></Html>
        </Canvas>
        </SolarContainer>
      )}
    </>
  )
}


//style
const ImgDisc = styled.p`
font-size:20px;
padding-bottom: 10px;
font-weight: 700;
@media only screen and (max-width:820px){
display:none;
}
`


const OriginalCont = styled.div`
height: 100%;
width: 1420px;
display: flex;
gap: 20px;
padding:10px,0px;
padding-bottom: 5px;
padding-left: 10px;
padding-right: 10px;
@media only screen and (max-width:1440px){
    width: 1000px;
}
@media only screen and (max-width:900px){
    width: 50vh;
    padding: 30px;
}
`

const SolarContainer = styled.div`
height: 100%;
width: 100%;
@media only screen and (max-width:1440px){
    width: 1000px;
}
`


const Left = styled.div`
display: flex;
 flex: 2;
 position: relative;
 justify-content: center;
 align-items: center;
 @media only screen and (max-width:1440px){
    display: none;
}
 @media only screen and (max-width:900px){
    display: none;
}

`
const Right = styled.div`
flex:2;
display: flex;
flex-direction: column;
justify-content: center;
position: relative;
@media only screen and (max-width:900px){
    align-items: center;
    text-align: center;
    padding-left: 0px;
}

`
const Title = styled.h1`
    font-size:50px;
    position: relative;
    padding-bottom: 30px;
@media only screen and (max-width:900px){
    font-size: 45px;
  
}
`

const Disc1 = styled.p`
font-size:18px;
padding-bottom: 15px;
@media only screen and (max-width:900px){
  font-size: 15px;

}
`

const Disc = styled.p`
font-size:18px;
padding-bottom: 15px;
@media only screen and (max-width:900px){
  font-size: 15px;

}
`
const SolarTitle = styled.p`
font-size:25px;
font-weight: bold;
@media only screen and (max-width:820px){

}
`